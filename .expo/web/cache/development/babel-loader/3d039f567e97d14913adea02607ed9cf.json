{"ast":null,"code":"import Svg, { Line, Circle } from \"react-native-svg\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Lines } from \"./Lines\";\n\nvar words = require(\"../assets/word.json\");\n\nimport { TrebleEasy, TrebleMedium, TrebleHard, BassEasy, BassMedium, BassHard } from \"./CYnums\";\nimport TrebleClef from \"../images/TrebleClef.svg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar outsideLetters = [];\nvar musicalLetters = [];\n\nfunction getNote() {\n  musicalLetters = [];\n  outsideLetters = [];\n  var letters = words.words[Math.floor(Math.random() * 74)];\n  letters = letters.split(\"\");\n  var musicalAlphabet = words.musicLetters;\n\n  for (var i = 0; i < letters.length; i++) {\n    if (musicalAlphabet.includes(letters[i])) {\n      musicalLetters.push(letters[i]);\n      outsideLetters.push(i);\n    } else {\n      outsideLetters.push(letters[i]);\n      musicalLetters.push(i);\n    }\n  }\n\n  console.log(outsideLetters);\n  console.log(musicalLetters);\n  return outsideLetters, musicalLetters;\n}\n\nvar cy = [];\n\nfunction isNumber(val) {\n  return /^[-]?\\d+$/.test(val);\n}\n\nfunction getCYTrebleHard() {\n  cy = [];\n\n  for (var i = 0; i < musicalLetters.length; i++) {\n    if (!isNumber(musicalLetters[i])) {\n      cy.push(TrebleHard[musicalLetters[i]]);\n    } else {\n      cy.push(false);\n    }\n  }\n\n  console.log(cy);\n}\n\nvar DrawStaff = function DrawStaff() {\n  getNote();\n  getCYTrebleHard();\n\n  var list = function list() {\n    return cy.map(function (element, i) {\n      return _jsxs(Svg, {\n        style: styles.staves,\n        children: [_jsx(Circle, {\n          cx: \"50\",\n          cy: cy[i],\n          r: \"5\",\n          stroke: \"black\",\n          strokeWidth: \"2.5\",\n          fill: \"black\"\n        }), _jsx(Line, {\n          x1: \"0\",\n          y1: \"16\",\n          x2: \"400\",\n          y2: \"16\",\n          stroke: \"black\",\n          strokeWidth: \"1\"\n        }), _jsx(Line, {\n          x1: \"0\",\n          y1: \"32\",\n          x2: \"400\",\n          y2: \"32\",\n          stroke: \"black\",\n          strokeWidth: \"1\"\n        }), _jsx(Line, {\n          x1: \"0\",\n          y1: \"48\",\n          x2: \"400\",\n          y2: \"48\",\n          stroke: \"black\",\n          strokeWidth: \"1\"\n        }), _jsx(Line, {\n          x1: \"0\",\n          y1: \"64\",\n          x2: \"400\",\n          y2: \"64\",\n          stroke: \"black\",\n          strokeWidth: \"1\"\n        }), _jsx(Line, {\n          x1: \"0\",\n          y1: \"80\",\n          x2: \"400\",\n          y2: \"80\",\n          stroke: \"black\",\n          strokeWidth: \"1\"\n        })]\n      }, i);\n    });\n  };\n\n  return _jsx(View, {\n    style: styles.staves,\n    children: list()\n  });\n};\n\nvar styles = StyleSheet.create({\n  staves: {\n    flex: 1,\n    flexDirection: \"row\",\n    height: 100,\n    padding: 25\n  }\n});\nexport { DrawStaff };","map":{"version":3,"sources":["/Users/musicaldev/Desktop/projects/MusicWord/components/DrawStaff.js"],"names":["Svg","Line","Circle","Lines","words","require","TrebleEasy","TrebleMedium","TrebleHard","BassEasy","BassMedium","BassHard","TrebleClef","outsideLetters","musicalLetters","getNote","letters","Math","floor","random","split","musicalAlphabet","musicLetters","i","length","includes","push","console","log","cy","isNumber","val","test","getCYTrebleHard","DrawStaff","list","map","element","styles","staves","StyleSheet","create","flex","flexDirection","height","padding"],"mappings":"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","sourcesContent":["import Svg, { Line, Circle } from \"react-native-svg\";\nimport { StyleSheet, View, Button } from \"react-native\";\nimport { Lines } from \"./Lines\";\nconst words = require(\"../assets/word.json\");\nimport {\n  TrebleEasy,\n  TrebleMedium,\n  TrebleHard,\n  BassEasy,\n  BassMedium,\n  BassHard\n} from \"./CYnums\";\nimport TrebleClef from \"../images/TrebleClef.svg\";\n\nlet outsideLetters = [];\nlet musicalLetters = [];\n\nfunction getNote() {\n  //pick random word from word.json\n  musicalLetters = [];\n  outsideLetters = [];\n\n  let letters = words.words[Math.floor(Math.random() * 74)];\n  letters = letters.split(\"\");\n  const musicalAlphabet = words.musicLetters;\n\n  //check if letter is part of musical alphabet\n  for (let i = 0; i < letters.length; i++) {\n    if (musicalAlphabet.includes(letters[i])) {\n      musicalLetters.push(letters[i]);\n      outsideLetters.push(i);\n    } else {\n      outsideLetters.push(letters[i]);\n      musicalLetters.push(i);\n    }\n  }\n  console.log(outsideLetters);\n  console.log(musicalLetters);\n  return outsideLetters, musicalLetters;\n}\n\nlet cy = [];\nfunction isNumber(val) {\n  // negative or positive\n  return /^[-]?\\d+$/.test(val);\n}\n\nfunction getCYTrebleHard() {\n  cy = [];\n  //use musicalLetters to find object key\n\n  for (let i = 0; i < musicalLetters.length; i++) {\n    if (!isNumber(musicalLetters[i])) {\n      cy.push(TrebleHard[musicalLetters[i]]);\n    } else {\n      cy.push(false);\n    }\n  }\n  console.log(cy);\n}\n\nconst DrawStaff = () => {\n  getNote();\n  getCYTrebleHard();\n  const list = () => {\n    return cy.map((element, i) => {\n      return (\n        <Svg key={i} style={styles.staves}>\n          <Circle\n            cx=\"50\"\n            cy={cy[i]}\n            r=\"5\"\n            stroke=\"black\"\n            strokeWidth=\"2.5\"\n            fill=\"black\"\n          />\n          <Line\n            x1=\"0\"\n            y1=\"16\"\n            x2=\"400\"\n            y2=\"16\"\n            stroke=\"black\"\n            strokeWidth=\"1\"\n          />\n          <Line\n            x1=\"0\"\n            y1=\"32\"\n            x2=\"400\"\n            y2=\"32\"\n            stroke=\"black\"\n            strokeWidth=\"1\"\n          />\n          <Line\n            x1=\"0\"\n            y1=\"48\"\n            x2=\"400\"\n            y2=\"48\"\n            stroke=\"black\"\n            strokeWidth=\"1\"\n          />\n          <Line\n            x1=\"0\"\n            y1=\"64\"\n            x2=\"400\"\n            y2=\"64\"\n            stroke=\"black\"\n            strokeWidth=\"1\"\n          />\n          <Line\n            x1=\"0\"\n            y1=\"80\"\n            x2=\"400\"\n            y2=\"80\"\n            stroke=\"black\"\n            strokeWidth=\"1\"\n          />\n        </Svg>\n      );\n    });\n  };\n\n  return <View style={styles.staves}>{list()}</View>;\n};\n\nconst styles = StyleSheet.create({\n  staves: {\n    flex: 1,\n    flexDirection: \"row\",\n    height: 100,\n    padding: 25\n  }\n});\n\nexport { DrawStaff };\n"]},"metadata":{},"sourceType":"module"}